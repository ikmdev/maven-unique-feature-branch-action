name: Maven Unique Feature Branch Action
description: Utilized for feature branch workflow

# Inputs
inputs:
  action:
    required: true 
    description: "Action Chosen"
  custom_branch_name:
    required: true
    description: "Original Branch Name From Input"
  trigger_branch_name: 
    required: true 
    description: "Branch Workflow is triggered from"
  is_default_branch:
    required: true
    description: "Whether workflow was triggered on default or feature branch"
  github_token:
    required: true
    description: "GitHub Token"

runs:
  using: "composite"
  steps:
    - name: Set Feature Branch Output
      id: featureBranchOutput
      shell: bash
      run: |
         if [ $IS_DEFAULT_BRANCH == 'true' ]; then
            echo "FEATURE_BRANCH_NAME=feature/$BRANCH_NAME" >> $GITHUB_OUTPUT
         else
            echo "FEATURE_BRANCH_NAME=TRIGGER_BRANCH_NAME" >> $GITHUB_OUTPUT
         fi
      env:
          IS_DEFAULT_BRANCH: ${{inputs.is_default_branch}}
          BRANCH_NAME: ${{inputs.custom_branch_name}}
          TRIGGER_BRANCH_NAME: ${{inputs.trigger_branch_name}}
        

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure Git
      shell: bash
      run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
    
    - name: Verify If Branch Exists 
      id: branchExist
      shell: bash
      run : |
        echo $BRANCH_NAME
        if git show-ref -q --heads $BRANCH_NAME; then
            echo '$BRANCH_NAME exists'
            echo 'BRANCH_EXISTS=true' >> $GITHUB_OUTPUT
        else 
            echo '$BRANCH_NAME does not exists'
            echo 'BRANCH_EXISTS=false' >> $GITHUB_OUTPUT
        fi
      env:
        BRANCH_NAME: ${{steps.featureBranchOutput.outputs.FEATURE_BRANCH_NAME}}

    # - name: "[Start Action] Create & switch to branch"
    #   if: inputs.action == 'Start'
    #   shell: bash
    #   run: |
    #         git checkout -b ${{inputs.feature_branch_name}}
    #         echo "Created and checked out new branch ${{inputs.feature_branch_name}}"  

    - name: "[${{inputs.action}} Action] Switch to branch"
      #if: inputs.action == 'Finish'
      shell: bash
      run: |
            git pull -p
            git checkout ${{steps.branchExist.outputs.BRANCH_EXISTS != 'true' && '-b' || ''}} ${{steps.featureBranchOutput.outputs.FEATURE_BRANCH_NAME}}
            echo "Checked out ${{steps.featureBranchOutput.outputs.FEATURE_BRANCH_NAME}}" 

    - name: Verify branch
      shell: bash
      run: |
          git branch
          echo "Current branch: $(git rev-parse --abbrev-ref HEAD)"

    - name: "[Start Action] Modify Maven coordinate" 
      if: inputs.action == 'Start'
      shell: bash
      run: |

          # Extract the current version from pom.xml
          ORIGINAL_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Original version: $ORIGINAL_VERSION"
      
          # Remove '-SNAPSHOT' if present
          BASE_VERSION=${ORIGINAL_VERSION%-SNAPSHOT}
          echo "Base version: $BASE_VERSION"
      
          # Create new version with '-feature-branch_name-SNAPSHOT'
          NEW_VERSION="${BASE_VERSION}-${{ inputs.custom_branch_name }}-SNAPSHOT"
          echo "New version: $NEW_VERSION"
      
          # Update the version in pom.xml
          mvn versions:set -DnewVersion="$NEW_VERSION" -DgenerateBackupPoms=false -DprocessAllModules=true

    - name: "[Finish Action] Modify Maven coordinate"
      if: inputs.action == 'Finish'
      shell: bash
      run: |
          
          # Extract the current version from pom.xml
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $CURRENT_VERSION"
      
          # Remove '-feature-branch_name' from the version
          NEW_VERSION=$(echo "$CURRENT_VERSION" | sed "s/-${{ inputs.custom_branch_name }}//")
          echo "Reverted version: $NEW_VERSION"
      
          # Update the version in pom.xml
          mvn versions:set -DnewVersion="$NEW_VERSION" -DgenerateBackupPoms=false -DprocessAllModules=true


    - name: Commit Message
      id: commitMessage
      shell: bash
      run: |
         if [ $ACTION == 'Start' ]; then
            echo "COMMIT_MSG=[START] Update Maven coordinate for $BRANCH_NAME" >> $GITHUB_OUTPUT
         else
            echo "COMMIT_MSG=[FINISH] Revert Maven coordinate for $BRANCH_NAME" >> $GITHUB_OUTPUT
         fi
      env:
          ACTION: ${{inputs.action}}
          BRANCH_NAME: ${{ steps.featureBranchOutput.outputs.FEATURE_BRANCH_NAME }}
    
    - name: Commit and push changes
      shell: bash
      run: |
          git add .
          git commit -m "${{steps.commitMessage.outputs.COMMIT_MSG}}"
          git push -u origin "${{ steps.featureBranchOutput.outputs.FEATURE_BRANCH_NAME }}"


    